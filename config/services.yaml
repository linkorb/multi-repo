# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    repositoriesBasePath: '%env(default:repositoriesBasePathDefault:MULTI_REPO_REPOSITORIES_PATH)%'
    repositoriesBasePathDefault: '%kernel.project_dir%/repositories'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Linkorb\MultiRepo\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Linkorb\MultiRepo\Services\Io\IoInterface: '@Linkorb\MultiRepo\Services\Io\UnixIo'

    # Here we're populating middleware factory pool with factories for each middleware type.
    # With that we ensure each middleware type binds to it's own factory and for each repo run of tool
    # we will create fresh version of middleware
    Linkorb\MultiRepo\Factory\MiddlewareFactoryPool:
        calls:
            -
                - addToPool
                -
                    - 'githubWorkflows'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createGithubActionsFactory']
                        arguments:
                            - '@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper'
                            - '@Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper'
            -
                - addToPool
                -
                    - 'qaChecks'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createQaFactory']
                        arguments:
                            - '@Linkorb\MultiRepo\Services\Io\IoInterface'
                            - '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'
                            - '@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper'
            -
                - addToPool
                -
                    - 'circleci'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createCircleCiFactory']
                        arguments:
                            - '@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper'
                            - '@Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper'
            -
                - addToPool
                -
                    - 'json'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createJsonFactory']
                        arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface']
            -
                - addToPool
                -
                    - 'yaml'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createYamlFactory']
                        arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface']
            -
                - addToPool
                -
                    - 'composerVersionConstraint'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createComposerJsonVersionConstraint']
                        arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\ShExecHelper']
            -
                - addToPool
                -
                    - 'composerDependencyBlacklist'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createComposerJsonDependencyBlacklist']
                        arguments: ['@Linkorb\MultiRepo\Services\Io\IoInterface', '@Linkorb\MultiRepo\Services\Helper\ShExecHelper']
            -
                - addToPool
                -
                    - 'editorConfig'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createEditorConfig']
                        arguments: ['@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper']
            -
                - addToPool
                -
                    - 'conventionalCommit'
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createConventionalCommit']
                        arguments:
                            - '@Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper'
                            - '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'
                            - '@Linkorb\MultiRepo\Services\Io\IoInterface'
            -
                - addToPool
                -
                    - !php/const Linkorb\MultiRepo\Command\RepositoriesExecCommand::EXEC_COMMAND_KEY
                    - !service
                        factory: ['Linkorb\MultiRepo\Factory\MiddlewareFactory', 'createCustomCommandExecutor']
                        arguments:
                            - '@Linkorb\MultiRepo\Services\Helper\ShExecHelper'

    Linkorb\MultiRepo\Handler\RepositoryHandler:
        arguments:
            $repositoriesBasePath: '%repositoriesBasePath%'

    Linkorb\MultiRepo\Services\ConfigResolver:
        arguments:
            $config: '%repos%'
            $repositoriesBasePath: '%repositoriesBasePath%'
            $repositoriesConfigPath: '%repositoriesConfigPath%'

    Linkorb\MultiRepo\Services\Helper\DockerfileInitHelper:
        arguments:
            $templatesDir: 'dockerfile'

    Linkorb\MultiRepo\Services\Helper\TemplateLocationHelper:
        arguments:
            $twig: '@twig'
            $authorizationHeader: '%env(default::HTTP_CLIENT_AUTHORIZATION_TYPE)% %env(default::HTTP_CLIENT_AUTHORIZATION_VALUE)%'

    Linkorb\MultiRepo\Command\DumpConfigCommand:
        arguments:
            $multiRepositoryHandler: '@multi_repo.multi_handlers.config_interceptor'

    multi_repo.multi_handlers.config_interceptor:
        parent: Linkorb\MultiRepo\Handler\MultiRepositoryHandler
        arguments:
            $repositoryHandler: '@Linkorb\MultiRepo\Handler\ConfigInterceptorHandler'

    Linkorb\MultiRepo\Handler\RepositoryHandlerInterface: '@Linkorb\MultiRepo\Handler\RepositoryHandler'
